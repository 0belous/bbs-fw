Firmware Disassembly Analysis
----------------------------------

Main:

- Select timer 1 as baud rate generator for UART1
- Setup timer 0 as millisecond counter
- Set P2.0 low
- Wait for voltage to stabilize (PCON bit 5)


- Read first 4 bytes from EXTMEM?? and verify that they are "!@#$" ?? if so, set bit 20.0 = 1.
  Else start timer 1 and set bit 20.0 = 00
  
- Read some stuff from IAP falash?
  
- Enter main loop

- Reset stored parameters on error??
  


Function 0xe8a9
-----------------------------------
Main loop.
  
 - Perform initialization if bit 20.0 == 1
   - Start timer1
   - Write 0x4b 0x4f on UART1
   - Read on UART1
   - Write 0x53 0x45 0x01 on UART1
   
   Write 0x15 on UART1
   Read UART1
   
  ...................
  
 
  
Function 0x93f2 
-----------------------------------
Contains parameters hard coded for what is sent to NEC MCU
Seems to be some form of reset to default values for all configuration.



Function 0x950a
-----------------------------------
Initialize pins

Set P5.1			(Unknwon function)
Set P3.6			(Unknown function)
Clear P2.3			(Unknwon function)
Clear P2.0			(Motor Power Enable)

Set P5.0 as input	(HALL sensor U)
Set P3.4 as input	(Hall sensor V)
Set P0.6 as input	(Hall Sensor W)

Set P4.5 and P4.6 as input (PAS sensor 1 & 2)

Set P2 inputs:
- P2.6				(Unknwon function)
- P2.5				(Unknwon function)
- P2.4 				(Unknwon function)
- P2.2				(Unknwon function)

Set P2 output:
- P2.0 				(Motor Power Enable)
- P2.1				(Motor Control Enable))
- P2.3 				(Unknwon function)


Clear ADC result registers

Enable ADC power
Start ADC conversion


Function 0x9da1
--------------------------------
Enable timer 2


Cannot find any reading or writing related to UART2.
I have no idea how that is possible, the registers are
never accessed but communication obviously working???

